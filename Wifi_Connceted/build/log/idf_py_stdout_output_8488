[1/8] Generating index.html.S
[2/8] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\Wifi_Connceted\build\bootloader\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/CODE/ESP32-IDF/esp32-idf-studying/Wifi_Connceted/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[3/6] Building ASM object CMakeFiles/main.elf.dir/index.html.S.obj
[4/6] Linking CXX executable main.elf
[5/6] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/CODE/ESP32-IDF/esp32-idf-studying/Wifi_Connceted/build/main.bin
[6/6] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\Wifi_Connceted\build\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/CODE/ESP32-IDF/esp32-idf-studying/Wifi_Connceted/build/partition_table/partition-table.bin D:/CODE/ESP32-IDF/esp32-idf-studying/Wifi_Connceted/build/main.bin"
main.bin binary size 0xc6720 bytes. Smallest app partition is 0x100000 bytes. 0x398e0 bytes (22%) free.
