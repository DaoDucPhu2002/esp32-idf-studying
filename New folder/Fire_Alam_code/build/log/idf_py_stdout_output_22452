[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\FireAlam_Project_Do_An\Fire_Alam_code\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/CODE/ESP32-IDF/esp32-idf-studying/FireAlam_Project_Do_An/Fire_Alam_code/build/bootloader/bootloader.bin"
Bootloader binary size 0x6760 bytes. 0x8a0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mqtt.c.obj
D:/CODE/ESP32-IDF/esp32-idf-studying/FireAlam_Project_Do_An/Fire_Alam_code/main/mqtt.c: In function 'get_mqtt_data':
D:/CODE/ESP32-IDF/esp32-idf-studying/FireAlam_Project_Do_An/Fire_Alam_code/main/mqtt.c:35:32: warning: assignment to 'uint8_t' {aka 'unsigned char'} from 'char *' makes integer from pointer without a cast [-Wint-conversion]
   35 |     alarm_data.is_line_not_use = data;
      |                                ^
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable main.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/CODE/ESP32-IDF/esp32-idf-studying/FireAlam_Project_Do_An/Fire_Alam_code/build/main.bin
[7/8] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\FireAlam_Project_Do_An\Fire_Alam_code\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/CODE/ESP32-IDF/esp32-idf-studying/FireAlam_Project_Do_An/Fire_Alam_code/build/partition_table/partition-table.bin D:/CODE/ESP32-IDF/esp32-idf-studying/FireAlam_Project_Do_An/Fire_Alam_code/build/main.bin"
main.bin binary size 0xdbf20 bytes. Smallest app partition is 0x100000 bytes. 0x240e0 bytes (14%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.3\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.3 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0.3/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/CODE/ESP32-IDF/esp32-idf-studying/FireAlam_Project_Do_An/Fire_Alam_code/build -P C:/Espressif/frameworks/esp-idf-v5.0.3/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM7 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM7
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:e2:e6:ce:04:d4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000ebfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26464 bytes to 16488...
Writing at 0x00001000... (50 %)
Writing at 0x000076cc... (100 %)
Wrote 26464 bytes (16488 compressed) at 0x00001000 in 0.7 seconds (effective 287.9 kbit/s)...
Hash of data verified.
Compressed 900896 bytes to 573441...
Writing at 0x00010000... (2 %)
Writing at 0x0001c690... (5 %)
Writing at 0x000251d6... (8 %)
Writing at 0x0002ab39... (11 %)
Writing at 0x00034f6c... (13 %)
Writing at 0x0003e5d2... (16 %)
Writing at 0x00043f75... (19 %)
Writing at 0x00049ad3... (22 %)
Writing at 0x0004f6fc... (25 %)
Writing at 0x00055236... (27 %)
Writing at 0x0005b3c8... (30 %)
Writing at 0x00060d20... (33 %)
Writing at 0x00066766... (36 %)
Writing at 0x0006c89c... (38 %)
Writing at 0x000723e1... (41 %)
Writing at 0x00077d0f... (44 %)
Writing at 0x0007d08a... (47 %)
Writing at 0x000823c9... (50 %)
Writing at 0x00087824... (52 %)
Writing at 0x0008cbdd... (55 %)
Writing at 0x00092181... (58 %)
Writing at 0x00097a71... (61 %)
Writing at 0x0009d873... (63 %)
Writing at 0x000a2fe1... (66 %)
Writing at 0x000a8879... (69 %)
Writing at 0x000ae03d... (72 %)
Writing at 0x000b3a49... (75 %)
Writing at 0x000b920b... (77 %)
Writing at 0x000becd1... (80 %)
Writing at 0x000c47a2... (83 %)
Writing at 0x000cac71... (86 %)
Writing at 0x000d51ef... (88 %)
Writing at 0x000db299... (91 %)
Writing at 0x000e0ec8... (94 %)
Writing at 0x000e6746... (97 %)
Writing at 0x000ebf20... (100 %)
Wrote 900896 bytes (573441 compressed) at 0x00010000 in 13.6 seconds (effective 529.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 440.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
