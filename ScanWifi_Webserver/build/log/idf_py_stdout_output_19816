[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\ScanWifi_Webserver\build\bootloader\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/main/main.c: In function 'root_post_handle':
D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/main/main.c:122:59: warning: passing argument 3 of 'httpd_req_get_url_query_str' makes integer from pointer without a cast [-Wint-conversion]
  122 |         if (httpd_req_get_url_query_str(req, input_value, input_name) == ESP_OK)
      |                                                           ^~~~~~~~~~
      |                                                           |
      |                                                           char *
In file included from D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/main/main.c:17:
C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esp_http_server/include/esp_http_server.h:958:73: note: expected 'size_t' {aka 'unsigned int'} but argument is of type 'char *'
  958 | esp_err_t httpd_req_get_url_query_str(httpd_req_t *r, char *buf, size_t buf_len);
      |                                                                  ~~~~~~~^~~~~~~
At top level:
D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/main/main.c:185:13: warning: 'disconnect_handler' defined but not used [-Wunused-function]
  185 | static void disconnect_handler(void *arg, esp_event_base_t event_base,
      |             ^~~~~~~~~~~~~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable main.elf
[6/8] Generating binary image from built executable
esptool.py v4.5
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/main.bin
[7/8] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\ScanWifi_Webserver\build\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/partition_table/partition-table.bin D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/main.bin"
main.bin binary size 0xb9e80 bytes. Smallest app partition is 0x100000 bytes. 0x46180 bytes (27%) free.
[7/8] cmd.exe /C "cd /D C:\Users\daoph\.espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Users\daoph\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=C:/Users/daoph/.espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build -P C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5
Serial port COM3
Connecting....
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:52:1c:76:17:94
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000c9fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16451...
Writing at 0x00001000... (50 %)
Writing at 0x000076ae... (100 %)
Wrote 26384 bytes (16451 compressed) at 0x00001000 in 0.9 seconds (effective 237.6 kbit/s)...
Hash of data verified.
Compressed 761472 bytes to 489214...
Writing at 0x00010000... (3 %)
Writing at 0x0001b5fd... (6 %)
Writing at 0x00024a50... (10 %)
Writing at 0x00029f41... (13 %)
Writing at 0x00031af0... (16 %)
Writing at 0x000374ae... (20 %)
Writing at 0x0003ce44... (23 %)
Writing at 0x00042ab9... (26 %)
Writing at 0x00048751... (30 %)
Writing at 0x0004da7b... (33 %)
Writing at 0x00052d48... (36 %)
Writing at 0x00058151... (40 %)
Writing at 0x0005d668... (43 %)
Writing at 0x00062dc9... (46 %)
Writing at 0x00068513... (50 %)
Writing at 0x0006e37c... (53 %)
Writing at 0x000738b4... (56 %)
Writing at 0x00079265... (60 %)
Writing at 0x0007eab4... (63 %)
Writing at 0x0008422e... (66 %)
Writing at 0x00089c56... (70 %)
Writing at 0x0008fd64... (73 %)
Writing at 0x000961a7... (76 %)
Writing at 0x0009bc55... (80 %)
Writing at 0x000a251d... (83 %)
Writing at 0x000ac626... (86 %)
Writing at 0x000b2b24... (90 %)
Writing at 0x000ba0cc... (93 %)
Writing at 0x000bfa66... (96 %)
Writing at 0x000c5293... (100 %)
Wrote 761472 bytes (489214 compressed) at 0x00010000 in 11.4 seconds (effective 536.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 302.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
