[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\ScanWifi_Webserver\build\bootloader\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable main.elf
[6/8] Generating binary image from built executable
esptool.py v4.5
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/main.bin
[7/8] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\ScanWifi_Webserver\build\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/partition_table/partition-table.bin D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build/main.bin"
main.bin binary size 0xba090 bytes. Smallest app partition is 0x100000 bytes. 0x45f70 bytes (27%) free.
[7/8] cmd.exe /C "cd /D C:\Users\daoph\.espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Users\daoph\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=C:/Users/daoph/.espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/CODE/ESP32-IDF/esp32-idf-studying/ScanWifi_Webserver/build -P C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5
Serial port COM3
Connecting....
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:52:1c:76:17:94
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000cafff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16453...
Writing at 0x00001000... (50 %)
Writing at 0x000076ac... (100 %)
Wrote 26384 bytes (16453 compressed) at 0x00001000 in 0.9 seconds (effective 238.8 kbit/s)...
Hash of data verified.
Compressed 762000 bytes to 489234...
Writing at 0x00010000... (3 %)
Writing at 0x0001b6ae... (6 %)
Writing at 0x00024afd... (10 %)
Writing at 0x0002a000... (13 %)
Writing at 0x00033e71... (16 %)
Writing at 0x000397d7... (20 %)
Writing at 0x0003f286... (23 %)
Writing at 0x00044d14... (26 %)
Writing at 0x0004a8cc... (30 %)
Writing at 0x000502de... (33 %)
Writing at 0x00056014... (36 %)
Writing at 0x0005b7bf... (40 %)
Writing at 0x000609fd... (43 %)
Writing at 0x00065e4d... (46 %)
Writing at 0x0006b219... (50 %)
Writing at 0x000707f6... (53 %)
Writing at 0x0007600c... (56 %)
Writing at 0x0007bef9... (60 %)
Writing at 0x00081419... (63 %)
Writing at 0x00086bb2... (66 %)
Writing at 0x0008c355... (70 %)
Writing at 0x00091cfa... (73 %)
Writing at 0x00097474... (76 %)
Writing at 0x0009d053... (80 %)
Writing at 0x000a3284... (83 %)
Writing at 0x000a9556... (86 %)
Writing at 0x000aed6f... (90 %)
Writing at 0x000b7bf8... (93 %)
Writing at 0x000bfc02... (96 %)
Writing at 0x000c5479... (100 %)
Wrote 762000 bytes (489234 compressed) at 0x00010000 in 11.4 seconds (effective 536.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 304.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
