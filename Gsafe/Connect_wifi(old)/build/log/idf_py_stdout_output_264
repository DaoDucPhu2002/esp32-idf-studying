[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\Connect_wifi\build\bootloader\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/main/main.c: In function 'echo_post_handler':
D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/main/main.c:175:22: warning: passing argument 1 of 'get_password' from incompatible pointer type [-Wincompatible-pointer-types]
  175 |         get_password(&url_data, &pass_data);
      |                      ^~~~~~~~~
      |                      |
      |                      char (*)[100]
D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/main/main.c:72:25: note: expected 'char *' but argument is of type 'char (*)[100]'
   72 | void get_password(char *str, char *pass)
      |                   ~~~~~~^~~
D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/main/main.c:175:33: warning: passing argument 2 of 'get_password' from incompatible pointer type [-Wincompatible-pointer-types]
  175 |         get_password(&url_data, &pass_data);
      |                                 ^~~~~~~~~~
      |                                 |
      |                                 char **
D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/main/main.c:72:36: note: expected 'char *' but argument is of type 'char **'
   72 | void get_password(char *str, char *pass)
      |                              ~~~~~~^~~~
At top level:
D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/main/main.c:37:13: warning: 'url_decoder' defined but not used [-Wunused-function]
   37 | static void url_decoder(char *str)
      |             ^~~~~~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable main.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/build/main.bin
[7/8] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\Connect_wifi\build\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/build/partition_table/partition-table.bin D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/build/main.bin"
main.bin binary size 0xba1a0 bytes. Smallest app partition is 0x100000 bytes. 0x45e60 bytes (27%) free.
[7/8] cmd.exe /C "cd /D C:\Users\daoph\.espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Users\daoph\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=C:/Users/daoph/.espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/CODE/ESP32-IDF/esp32-idf-studying/Connect_wifi/build -P C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting....
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:52:1c:76:17:94
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000cafff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16454...
Writing at 0x00001000... (50 %)
Writing at 0x000076ad... (100 %)
Wrote 26384 bytes (16454 compressed) at 0x00001000 in 0.9 seconds (effective 239.5 kbit/s)...
Hash of data verified.
Compressed 762272 bytes to 489356...
Writing at 0x00010000... (3 %)
Writing at 0x0001b79d... (6 %)
Writing at 0x00024bde... (10 %)
Writing at 0x0002a0d7... (13 %)
Writing at 0x00033f10... (16 %)
Writing at 0x00039870... (20 %)
Writing at 0x0003f327... (23 %)
Writing at 0x00044d17... (26 %)
Writing at 0x0004a8c3... (30 %)
Writing at 0x0005035b... (33 %)
Writing at 0x00056074... (36 %)
Writing at 0x0005b823... (40 %)
Writing at 0x00060a5d... (43 %)
Writing at 0x00065eae... (46 %)
Writing at 0x0006b273... (50 %)
Writing at 0x00070848... (53 %)
Writing at 0x00076043... (56 %)
Writing at 0x0007bf21... (60 %)
Writing at 0x0008143d... (63 %)
Writing at 0x00086bdb... (66 %)
Writing at 0x0008c371... (70 %)
Writing at 0x00091d27... (73 %)
Writing at 0x00097489... (76 %)
Writing at 0x0009d062... (80 %)
Writing at 0x000a328a... (83 %)
Writing at 0x000a9542... (86 %)
Writing at 0x000aed71... (90 %)
Writing at 0x000b7c0f... (93 %)
Writing at 0x000bfbce... (96 %)
Writing at 0x000c54ea... (100 %)
Wrote 762272 bytes (489356 compressed) at 0x00010000 in 11.3 seconds (effective 537.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 361.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
