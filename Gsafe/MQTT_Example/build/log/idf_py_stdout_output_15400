[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\MQTT_Example\build\bootloader\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/nvs_app.c.obj
D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/main/nvs_app.c: In function 'app_flash_get_int':
D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/main/nvs_app.c:75:39: warning: passing argument 3 of 'nvs_get_i32' from incompatible pointer type [-Wincompatible-pointer-types]
   75 |     err = nvs_get_i32(my_handle, key, value);
      |                                       ^~~~~
      |                                       |
      |                                       int *
In file included from C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/nvs_flash/include/nvs_flash.h:21,
                 from D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/main/nvs_app.h:6,
                 from D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/main/nvs_app.c:1:
C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/nvs_flash/include/nvs.h:375:71: note: expected 'int32_t *' {aka 'long int *'} but argument is of type 'int *'
  375 | esp_err_t nvs_get_i32 (nvs_handle_t handle, const char* key, int32_t* out_value);
      |                                                              ~~~~~~~~~^~~~~~~~~
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable main.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/build/main.bin
[8/9] cmd.exe /C "cd /D D:\CODE\ESP32-IDF\esp32-idf-studying\MQTT_Example\build\esp-idf\esptool_py && C:\Users\daoph\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/build/partition_table/partition-table.bin D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/build/main.bin"
main.bin binary size 0x30ad0 bytes. Smallest app partition is 0x190000 bytes. 0x15f530 bytes (88%) free.
[8/9] cmd.exe /C "cd /D C:\Users\daoph\.espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Users\daoph\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=C:/Users/daoph/.espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/CODE/ESP32-IDF/esp32-idf-studying/MQTT_Example/build -P C:/Users/daoph/.espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM16 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin 0xd000 ota_data_initial.bin
esptool.py v4.5.1
Serial port COM16
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c0:49:ef:e0:11:70
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000d000 to 0x0000efff...
Compressed 26384 bytes to 16452...
Writing at 0x00001000... (50 %)
Writing at 0x000076ad... (100 %)
Wrote 26384 bytes (16452 compressed) at 0x00001000 in 0.9 seconds (effective 247.0 kbit/s)...
Hash of data verified.
Compressed 199376 bytes to 108486...
Writing at 0x00010000... (14 %)
Writing at 0x0001bc35... (28 %)
Writing at 0x000214cb... (42 %)
Writing at 0x00026c54... (57 %)
Writing at 0x0002c35c... (71 %)
Writing at 0x000358bd... (85 %)
Writing at 0x0003cf41... (100 %)
Wrote 199376 bytes (108486 compressed) at 0x00010000 in 2.6 seconds (effective 624.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 145...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (145 compressed) at 0x00008000 in 0.1 seconds (effective 334.6 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000d000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000d000 in 0.1 seconds (effective 446.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
